VERSION=4.0.3
NAME=parmetis-${VERSION}
SOURCE=http://glaros.dtc.umn.edu/gkhome/fetch/sw/parmetis/
PACKING=.tar.gz
CHECKSUM=f69c479586bf6bb7aff6a9bc0c739628
BUILDCHAIN=custom

INSTALL_PATH=${INSTALL_PATH}/${NAME}

if [ ${USE_64_BIT_INDICES} = ON ]; then

    echo "
--- metis/include/metis.h	2013-03-30 16:24:50.000000000 +0000
+++ metis/include/metis.h	2022-11-27 16:14:07.863359070 +0000
@@ -30,7 +30,7 @@
  GCC does provides these definitions in stdint.h, but it may require some
  modifications on other architectures.
 --------------------------------------------------------------------------*/
-#define IDXTYPEWIDTH 32
+#define IDXTYPEWIDTH 64


 /*--------------------------------------------------------------------------
@@ -40,7 +40,7 @@
    32 : single precission floating point (float)
    64 : double precission floating point (double)
 --------------------------------------------------------------------------*/
-#define REALTYPEWIDTH 32
+#define REALTYPEWIDTH 64"  | tee -a ${ORIG_DIR}/${PROJECT}/patches/parmetis-4.0.3-build.patch
fi

package_specific_build() {
    cp -rf ${UNPACK_PATH}/${EXTRACTSTO}/* .
    
    # Firstly build metis
    cd metis
    
    make config prefix=${INSTALL_PATH} shared=1
    quit_if_fail "parmetis/metis make config failed"
    
    make -j${JOBS}
    quit_if_fail "parmetis/metis make failed"
    
    make install
    quit_if_fail "parmetis/metis make install failed"
    
    # Secondly build parmetis
    cd ..
    
    make config prefix=${INSTALL_PATH} shared=1 cc=${CC} cxx=${CXX}
    quit_if_fail "parmetis make config failed"
    
    make -j${JOBS}
    quit_if_fail "parmetis make failed"
    
    make install
    quit_if_fail "parmetis make install failed"
}

package_specific_patch () {
    if [ ${PLATFORM_OSTYPE} == linux ]; then
        if [ ${VERSION} == "4.0.3" ]; then
            cd ${UNPACK_PATH}/${EXTRACTSTO}
            cecho ${WARN} "applying patch for building METIS shared libraries"
            patch -p0 --forward < ${ORIG_DIR}/${PROJECT}/patches/parmetis-4.0.3-build.patch || true
        fi
    fi
}

package_specific_register () {
    export METIS_DIR=${INSTALL_PATH}
    export PARMETIS_DIR=${INSTALL_PATH}

    if [ ${PLATFORM_OSTYPE} == macos ]; then
        export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${INSTALL_PATH}/lib
    fi
}

package_specific_conf () {
    # Generate configuration file
    CONFIG_FILE=${CONFIGURATION_PATH}/${NAME}
    rm -f $CONFIG_FILE
    echo "
export METIS_DIR=${INSTALL_PATH}
export PARMETIS_DIR=${INSTALL_PATH}
" >> $CONFIG_FILE

    if [ ${PLATFORM_OSTYPE} == macos ]; then
        echo "export DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:${INSTALL_PATH}/lib
" >> $CONFIG_FILE
    fi
}

